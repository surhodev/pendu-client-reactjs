{"ast":null,"code":"var _jsxFileName = \"/Users/nicolas/ReactJS/pendu1/src/App.js\";\nimport './App.css';\nimport { Component } from 'react';\nimport Key from './Key';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      keys: [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ'].map(l => {\n        return {\n          value: l,\n          state: 'none'\n        };\n      })\n    };\n  }\n\n  handleKeyClick(key) {\n    const {\n      keys\n    } = this.state;\n    const updatedKeys = [...keys];\n    const index = updatedKeys.findIndex(e => e.value === key);\n    updatedKeys[index].state = 'matched';\n    this.setState({\n      keys: updatedKeys\n    });\n    console.log(key, index, updatedKeys);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(this.state),\n        children: \"Check state\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.keys.map(k => {\n          return /*#__PURE__*/_jsxDEV(Key, {\n            keyValue: k.value,\n            state: k.state,\n            onClick: value => {\n              this.handleKeyClick(value);\n            }\n          }, k.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nicolas/ReactJS/pendu1/src/App.js"],"names":["Component","Key","App","state","keys","map","l","value","handleKeyClick","key","updatedKeys","index","findIndex","e","setState","console","log","render","k"],"mappings":";AAAA,OAAO,WAAP;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAGxBG,KAHwB,GAGhB;AAEJC,MAAAA,IAAI,EAAE,CAAC,GAAG,4BAAJ,EAAkCC,GAAlC,CAAsCC,CAAC,IAAI;AAAC,eAAO;AAACC,UAAAA,KAAK,EAAED,CAAR;AAAWH,UAAAA,KAAK,EAAE;AAAlB,SAAP;AAAiC,OAA7E;AAFF,KAHgB;AAAA;;AAQxBK,EAAAA,cAAc,CAACC,GAAD,EAAM;AAEhB,UAAM;AAAEL,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AAGA,UAAMO,WAAW,GAAG,CAAC,GAAGN,IAAJ,CAApB;AACA,UAAMO,KAAK,GAAGD,WAAW,CAACE,SAAZ,CAAsBC,CAAC,IAAIA,CAAC,CAACN,KAAF,KAAYE,GAAvC,CAAd;AACAC,IAAAA,WAAW,CAACC,KAAD,CAAX,CAAmBR,KAAnB,GAA2B,SAA3B;AAEA,SAAKW,QAAL,CAAc;AAAEV,MAAAA,IAAI,EAAEM;AAAR,KAAd;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ,EAAiBE,KAAjB,EAAwBD,WAAxB;AACH;;AAEDO,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,MAAMF,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAA,kBACK,KAAKA,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoBa,CAAC,IAAI;AACtB,8BAAO,QAAC,GAAD;AAEH,YAAA,QAAQ,EAAEA,CAAC,CAACX,KAFT;AAGH,YAAA,KAAK,EAAEW,CAAC,CAACf,KAHN;AAIH,YAAA,OAAO,EAAGI,KAAD,IAAW;AAAC,mBAAKC,cAAL,CAAoBD,KAApB;AAA2B;AAJ7C,aACEW,CAAC,CAACX,KADJ;AAAA;AAAA;AAAA;AAAA,kBAAP;AAMH,SAPA;AADL;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAxCuB;;AA4C5B,eAAeL,GAAf","sourcesContent":["import './App.css';\nimport { Component } from 'react';\nimport Key from './Key'\n\nclass App extends Component {\n\n\n    state = {\n\n        keys: [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ'].map(l => {return {value: l, state: 'none'}})\n    }\n\n    handleKeyClick(key) {\n\n        const { keys } = this.state\n\n        \n        const updatedKeys = [...keys]\n        const index = updatedKeys.findIndex(e => e.value === key )\n        updatedKeys[index].state = 'matched'\n\n        this.setState({ keys: updatedKeys })\n\n        console.log(key, index, updatedKeys)\n    }\n\n    render() {\n\n        return (\n            <div className=\"App\">\n                <button onClick={() => console.log(this.state)}>Check state</button>\n\n                <ul>\n                    {this.state.keys.map(k => {\n                        return <Key \n                            key={k.value} \n                            keyValue={k.value} \n                            state={k.state}\n                            onClick={(value) => {this.handleKeyClick(value)}}\n                            />\n                    })}\n                </ul>\n            </div>\n        );\n    }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}